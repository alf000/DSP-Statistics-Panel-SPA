@page "/fetchdata"
@inject HttpClient Http



<h1>Statistics</h1>

<p>Here is a listing of a time stamp with data from the game.1</p>

@if (response == null)
{
    <p><em>Loading...</em></p>
}
else
{


    <table class="table">
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>Item ID</th>
                <th>Count</th>
            </tr>

            @for (var i = 0; i < response.ResponseItemsIds.Length; i++)
            {
                <tr>



                    <td>@response.TimeElapsed</td>
                    <td>@response.ResponseItemsIds[i]</td>
                    <td>@response.ResponseItemsCounts[i]</td>
                </tr>
            }
        </thead>
        <tbody>
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="IncrementCount">Update</button>
    <p>Current count: @currentCount</p>
}

@code {
    private List<ResponseData>
        listOfResponses;
    private ResponseData response;
    private int lim;
    private int currentCount = 0;
    private const string ServiceEndpoint = "http://localhost:42069/";
    private void IncrementCount()
    {
        currentCount++;
    }
    protected override async Task OnInitializedAsync() => await GetTodoItems();

    private async Task GetTodoItems() => response = await Http.GetFromJsonAsync<ResponseData>(ServiceEndpoint);
    public class ResponseData
    {
        public double TimeElapsed { get; set; }
        public int[] ResponseItemsIds { get; set; }
        public int[] ResponseItemsCounts { get; set; }
    }
}
